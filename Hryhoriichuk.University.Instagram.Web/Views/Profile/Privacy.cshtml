@model Hryhoriichuk.University.Instagram.Web.Models.PrivacySettingsViewModel

@{
    Layout = "_Layout";
}

<style>
    .mt-4 {
        margin-top: 1.5rem;
    }
</style>

<h1>Privacy settings</h1>

<form id="privacySettingsForm">
    <div class="form-check">
        <input class="form-check-input" type="checkbox" id="makePrivateCheckbox" @(Model.IsPrivate ? "checked" : "")>
        <label class="form-check-label" for="makePrivateCheckbox">
            Make my profile private
        </label>
    </div>
    <button type="button" class="btn btn-primary mt-2" id="savePrivacySettings">Save</button>
</form>

<div class="mt-4">
    <a href="@Url.Action("Index", "FollowRequests")" class="btn btn-outline-primary">
        <i class="bi bi-people"></i> Review pending follow requests
    </a>
</div>

<div class="form-group mt-4">
    <label for="commentPrivacy">Who can comment on your posts?</label>
    <select class="form-control" id="commentPrivacy">
        <option value="0" @(Model.CommentPrivacy == Hryhoriichuk.University.Instagram.Web.Models.CommentPrivacy.Everybody ? "selected" : "")>Everybody</option>
        <option value="1" @(Model.CommentPrivacy == Hryhoriichuk.University.Instagram.Web.Models.CommentPrivacy.OnlyFollowers ? "selected" : "")>Only those who I follow</option>
        <option value="2" @(Model.CommentPrivacy == Hryhoriichuk.University.Instagram.Web.Models.CommentPrivacy.Nobody ? "selected" : "")>Nobody</option>
    </select>
    <button type="button" class="btn btn-primary mt-2" id="saveCommentPrivacy">Save Comment Privacy</button>
</div>

@section Scripts {
    <script>
        // Script for Changing Privacy Settings
        $(function () {
            var previousState = $("#makePrivateCheckbox").prop("checked");

            $("#savePrivacySettings").click(function () {
                var currentState = $("#makePrivateCheckbox").prop("checked");

                // Check if the checkbox state has changed
                if (currentState !== previousState) {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("UpdatePrivacySettings", "Profile")",
                        contentType: "application/json",
                        data: JSON.stringify({ isPrivate: currentState }), // Ensure data is sent
                        success: function (response) {
                            console.log("Privacy settings updated successfully");
                            // Update the previous state to the current state
                            previousState = currentState;
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            console.error("Error updating privacy settings:", textStatus);
                        }
                    });
                }
            });

            // Script for Changing Comment Privacy Settings
            $("#saveCommentPrivacy").click(function () {
                var commentPrivacy = $("#commentPrivacy").val();  // Retrieve the selected value
                updateCommentPrivacy(commentPrivacy);  // Call the function with the selected value
            });
        });

        function updateCommentPrivacy(commentPrivacy) {
            console.log("Sending commentPrivacy:", commentPrivacy);  // Log the data to ensure it is correct

            $.ajax({
                type: "POST",
                url: "@Url.Action("UpdateCommentPrivacy", "Profile")",
                data: { commentPrivacy: commentPrivacy },
                success: function (response) {
                    console.log("Comment privacy settings updated successfully");
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.error("Error updating comment privacy settings:", textStatus);
                }
            });
        }

    </script>
}
